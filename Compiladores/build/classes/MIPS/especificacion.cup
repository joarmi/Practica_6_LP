package MIPS; 
import java_cup.runtime.*;
import java.io.*; 
import java.util.*;
 
action code {:
    Vector elementos = new Vector();
    Vector constantes = new Vector();
    Vector var = new Vector();
    int contador = 1;

    boolean todo_bien = true;
    boolean contenido = false;
    boolean asignacion = true;
:}; 
 
parser code {:

public static void main(String[] arg){     
    if (arg.length!=1)       
        System.out.println("Debe dar el nombre del fichero de entrada como parámetro");     
    else     
    {          
        String fileName=arg[0];          
        LexicalAnalyzerMIPS miAnalizadorLexico=null;          
        parser parserObj=null;          
        Symbol x=null;                    

        try{            
            miAnalizadorLexico =             
                new LexicalAnalyzerMIPS(new InputStreamReader(new FileInputStream(fileName)));
        
        } catch (IOException e){            
            System.err.println("Fichero de entrada "+fileName+" no encontrado");            
            System.exit(0);          
        }          
        try{             
            parserObj = new parser(miAnalizadorLexico);             
            x=parserObj.parse();          
        } catch (Exception e) {             
            System.err.println("No se pudo inicializar el compilador");
            e.printStackTrace();
            System.exit(0);          
        }       
    } // end else 
} 
:};

terminal LEER, MOSTRAR, PUNTO_COMA, ASIGNACION, MULTIPLICACION, DIVISION, SUMA, RESTA, PAR_ABIERTO, PAR_CERRADO, UMINUS;
terminal String VARIABLE_VALIDA;
terminal Integer INTEGER_LITERAL;
 
non terminal String expr_list, expr_part;
non terminal String operacion;
 
precedence left SUMA, RESTA; 
precedence left MULTIPLICACION, DIVISION;
precedence left UMINUS;


/* Gramática */

expr_list ::= expr_list:el expr_part:ep
	      {:RESULT=".text\nmain:\n" + el + ep + "\n\t\t.data\n";
			  
		    for(int i = 0; i < var.size(); i++){
			RESULT+=var.elementAt(i) + ":\t.word 0\n";
                    }
				
                    RESULT+="constants:\n";
				
                    for(int i = 0; i < var.size(); i++){
			RESULT+="\t.word" + constantes.elementAt(i) + "\n";
                    }
				
                    RESULT+="temp:\n\t.space 8";
				
                    System.out.println(RESULT);
	      :} 
	      | 
              expr_part:ep
              {:RESULT+=ep;
              :};

expr_part ::= operacion:op PUNTO_COMA
              {:RESULT=op;
              :}
              |
              error:err
              {:System.err.println("Error sintactica, falta un punto y coma o un parentesis, linea " + errleft + " columna " + errright); :};

operacion ::= operacion:op1 SUMA operacion:op2
              {:if(todo_bien){

                    if(var.contains(op1) && var.contains(op2)){
                        if(contador == 1)
                            RESULT="\tlw\t$t1, " + op1 + "\n" + "\tlw\t$t2, " + op2 + "\n" + "\tadd\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT="\tlw\t$t2, " + op1 + "\n" + "\tlw\t$t1, " + op2 + "\n" + "\tadd\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
                    if(!var.contains(op1) && !var.contains(op2)){
                        if(contador == 1)
                            RESULT=op1 + op2 + "\tadd\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT=op1 + op2 + "\tadd\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
                    if(var.contains(op1) && !var.contains(op2)){
                        if(contador == 1)
                            RESULT="\tlw\t$t1, " + op1 + "\n" + op2 + "\tadd\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT="\tlw\t$t2, " + op1 + "\n" + op2 + "\tadd\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
                    if(!var.contains(op1) && var.contains(op2)){
                        if(contador == 1)
                            RESULT=op1 + "\tlw\t$t1, " + op2 + "\n" + "\tadd\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT=op1 + "\tlw\t$t2, " + op2 + "\n" + "\tadd\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
                }

                else{
                    todo_bien = true;
                    asignacion = false;
                } :}
              |
              operacion:op3 RESTA operacion:op4
              {:if(todo_bien){
                    
                    if(var.contains(op3) && var.contains(op4)){
                        if(contador == 1)
                            RESULT="\tlw\t$t1, " + op3 + "\n" + "\tlw\t$t2, " + op4 + "\n" + "\tsub\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT="\tlw\t$t2, " + op3 + "\n" + "\tlw\t$t1, " + op4 + "\n" + "\tsub\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
                    if(!var.contains(op3) && !var.contains(op4)){
                        if(contador == 1)
                            RESULT=op3 + op4 + "\tsub\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT=op3 + op4 + "\tsub\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
                    if(var.contains(op3) && !var.contains(op4)){
                        if(contador == 1)
                            RESULT="\tlw\t$t1, " + op3 + "\n" + op4 + "\tsub\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT="\tlw\t$t2, " + op3 + "\n" + op4 + "\tsub\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
                    if(!var.contains(op3) && var.contains(op4)){
                        if(contador == 1)
                            RESULT=op3 + "\tlw\t$t1, " + op4 + "\n" + "\tsub\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT=op3 + "\tlw\t$t2, " + op4 + "\n" + "\tsub\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
		}
			
                else{
                    todo_bien = true;
                    asignacion = false;
                } :}
              |
              operacion:op5 MULTIPLICACION operacion:op6
              {:if(todo_bien){
                    
                    if(var.contains(op5) && var.contains(op6)){
                        if(contador == 1)
                            RESULT="\tlw\t$t1, " + op5 + "\n" + "\tlw\t$t2, " + op6 + "\n" + "\tmul\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT="\tlw\t$t2, " + op5 + "\n" + "\tlw\t$t1, " + op6 + "\n" + "\tmul\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
                    if(!var.contains(op5) && !var.contains(op6)){
                        if(contador == 1)
                            RESULT=op5 + op6 + "\tmul\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT=op5 + op6 + "\tmul\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
                    if(var.contains(op5) && !var.contains(op6)){
                        if(contador == 1)
                            RESULT="\tlw\t$t1, " + op5 + "\n" + op6 + "\tmul\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT="\tlw\t$t2, " + op5 + "\n" + op6 + "\tmul\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
                    if(!var.contains(op5) && var.contains(op6)){
                        if(contador == 1)
                            RESULT=op5 + "\tlw\t$t1, " + op6 + "\n" + "\tmul\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT=op5 + "\tlw\t$t2, " + op6 + "\n" + "\tmul\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
		}
			
                else{
                    todo_bien = true;
                    asignacion = false;
                } :}
              |
              operacion:op7 DIVISION operacion:op8
              {:if(todo_bien){
                    
                    if(var.contains(op7) && var.contains(op8)){
                        if(contador == 1)
                            RESULT="\tlw\t$t1, " + op7 + "\n" + "\tlw\t$t2, " + op8 + "\n" + "\tdiv\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT="\tlw\t$t2, " + op7 + "\n" + "\tlw\t$t1, " + op8 + "\n" + "\tdiv\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
                    if(!var.contains(op7) && !var.contains(op8)){
                        if(contador == 1)
                            RESULT=op7 + op8 + "\tdiv\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT=op7 + op8 + "\tdiv\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
                    if(var.contains(op7) && !var.contains(op8)){
                        if(contador == 1)
                            RESULT="\tlw\t$t1, " + op7 + "\n" + op8 + "\tdiv\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT="\tlw\t$t2, " + op7 + "\n" + op8 + "\tdiv\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
                    if(!var.contains(op7) && var.contains(op8)){
                        if(contador == 1)
                            RESULT=op7 + "\tlw\t$t1, " + op8 + "\n" + "\tdiv\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t2, temp\n";
                        else
                            RESULT=op7 + "\tlw\t$t2, " + op8 + "\n" + "\tdiv\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t&t1, temp\n";
                    }
		}
			
                else{
                    todo_bien = true;
                    asignacion = false;
                } :}
              |
              INTEGER_LITERAL:inte
              {:if(!constantes.contains(inte))
                    constantes.addElement(inte);

                for(int i = 0; i < constantes.size(); i++){
                    if(constantes.elementAt(i) == inte){
                        if(contador == 1){
                            RESULT="\tlw\t$t" + contador + ", constants+" + (i * 4) + "\n";
                            contador++;
                        }
                        else{
                            RESULT="\tlw\t$t" + contador + ", constants+" + (i * 4) + "\n";
                            contador--;
                        }
                    }
                }:}
              |
              VARIABLE_VALIDA:v3
              {:contenido = elementos.contains(v3);

               if(!contenido){
                 System.err.println("La variable " + v3 + " no ha sido inicializada1, erro fila " + v3left + " columna " + v3right);
                 todo_bien = false;
              }
              else{
                RESULT=v3;
                var.addElement(v3);
              }
              :}
              |
              PAR_ABIERTO operacion PAR_CERRADO
              {:if(todo_bien){
                    System.out.println("Se ha detectado parentesis");
                    todo_bien = true;
                } :}
              |
              RESTA operacion:op1
              {:if(var.contains(op1)){
                    if(contador == 1)
                        RESULT=op1 + "\n" + "\tlw\t$t2, constants+32" + "\n" + "\tsub\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t$t" + contador + ", temp\n";
                    else
                        RESULT=op1 + "\n" + "\tlw\t$t1, constants+32" + "\n" + "\tsub\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t$t" + contador + ", temp\n";
                }

		else{
                    if(contador == 1)
                        RESULT=op1 + "\tlw\t$t2, constants+32" + "\n" + "\tsub\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t$t" + contador + ", temp\n";
                    else
                        RESULT=op1 + "\tlw\t$t1, constants+32" + "\n" + "\tsub\t$t0, $t1, $t2\n" + "\tsw\t$t0, temp\n" + "\tlw\t$t" + contador + ", temp\n";
		} :}
              |
              LEER VARIABLE_VALIDA:v1
              {:System.out.println("Se ha leido correctamente la variable " + v1);
              elementos.addElement(v1); :}
              |
              MOSTRAR VARIABLE_VALIDA:v2
              {:contenido = elementos.contains(v2);

               if(contenido){
                    RESULT="\n\tlw\t$a0, " + v2 + "\n" + "\tli\t$v0, 1\n" + "\tsyscall\n";
               }
               else
                 System.err.println("La variable " + v2 + " no ha sido inicializada2, erro fila " + v2left + " columna " + v2right); :}
              |
              VARIABLE_VALIDA:v4 ASIGNACION operacion:oper
              {:if(!asignacion || !todo_bien){
                    System.err.println("La variable " + v4 + " no ha sido inicializada3, erro fila " + v4left + " columna " + v4right);
                    asignacion = true;
                    todo_bien = true;
                }
                else{
                    elementos.addElement(v4);

                    if(contador == 1){
                        RESULT=oper + "\tsw\t$t1, " + v4;
                    }
                    else{
                        RESULT=oper + "\tsw\t$t2, " + v4;
                    }

					

                } :};